import java.util.*;

class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {
        if (nums == null || nums.length == 0) return new int[0];
        
        Deque<Integer> windowDeque = new ArrayDeque<>();
        int[] result = new int[nums.length - k + 1];
        int resultIndex = 0;
        
        for (int i = 0; i < nums.length; i++) {
            while (!windowDeque.isEmpty() && windowDeque.peekFirst() <= i - k) {
                windowDeque.pollFirst();
            }    
            while (!windowDeque.isEmpty() && nums[i] >= nums[windowDeque.peekLast()]) {
                windowDeque.pollLast();
            }
            
            windowDeque.offerLast(i);
            if (i >= k - 1) {
                result[resultIndex++] = nums[windowDeque.peekFirst()];
            }
        }
        
        return result;
    }
}
